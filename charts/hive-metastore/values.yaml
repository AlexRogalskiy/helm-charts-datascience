# Default values for postgres.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

service:
  image:
    repository: "inseefrlab/jupyter-datascience"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "master"

liveness:
  enabled : "true"

security:
  password: "changeme"
  networkPolicy: 
    enable: true

postgresql:
  version: "12"
  username: postgres
  dbname: defaultdb
  password: changeme

postgis:
  enabled: false
  version: "3.1"

readiness:
  enabled: "true"


init:
  enabled: false
  image: curimages/curl
  command: ["curl"]
  args: ["https://example.com/example.sql", "-o", "/data/dump.sql"]

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

networkPolicy:
  enabled: false

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

networking:
  type: ClusterIP
  port: 9083

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 10Gi
  # existingClaim: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}